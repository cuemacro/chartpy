name: Dependency Age Check

on:
  push

jobs:
  check-dependency-age:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install toml requests
      #    python -c "import toml; data = toml.load('pyproject.toml'); deps = data.get('project', {}).get('dependencies', []); print('\n'.join(deps))" > dependencies.txt
      #    pip install -r <(python -c "import toml; data = toml.load('pyproject.toml'); deps = data.get('project', {}).get('dependencies', []); print('\n'.join(f'{pkg}' for pkg in deps))")

      - name: Check dependency ages
        run: |
          python - <<EOF
          import requests, toml, re

          def extract_package_name(dep):
            return re.split(r"[<=>]", dep, 1)[0].strip()

          data = toml.load('pyproject.toml')
          deps = data.get('project', {}).get('dependencies', [])
          print(deps)


          with open("dependency-age.txt", "w") as f:
              f.write("Dependency Age Report:\n")
              for dep in deps:
                  print(dep)
                  pkg = extract_package_name(dep)
                  print(pkg)
                  response = requests.get(f"https://pypi.org/pypi/{pkg}/json")
                  if response.status_code == 200:
                      releases = response.json().get("releases", {})
                      latest_version = sorted(releases.keys(), reverse=True)[0]
                      release_date = releases[latest_version][-1]["upload_time"]
                      f.write(f"{pkg} (latest: {latest_version}) - Last updated: {release_date}\n")
          EOF

      - name: Upload Dependency Age Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-age-report
          path: dependency-age.txt
